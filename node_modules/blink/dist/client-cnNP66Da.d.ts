import { AgentDefaultExport, SendMessagesRequest } from "./index-C29YiDK4.js";
import { UIMessageChunk } from "ai";

//#region src/lib/convert-response-to-ui-message-stream.d.ts
declare function convertResponseToUIMessageStream(response: Response): ReadableStream<UIMessageChunk>;
//#endregion
//#region src/client.d.ts
interface RequestOptions {
  readonly abortSignal?: AbortSignal;
}
interface AgentClientOptions {
  readonly fetch: (input: RequestInfo | URL, init?: RequestInit) => Promise<Response>;
}
/**
 * createClient creates a client from a base URL.
 *
 * @param baseUrl
 * @returns
 */
declare function createClient(baseUrl: string): AgentClient;
/**
 * createClientFromAgent creates a client from an agent.
 *
 * @param agent
 * @returns
 */
declare function createClientFromAgent(agent: AgentDefaultExport): AgentClient;
declare class AgentClient {
  private readonly baseUrl;
  private readonly fetch;
  constructor(baseUrl: string, options?: AgentClientOptions);
  sendMessages(request: SendMessagesRequest, options?: RequestOptions): Promise<Response>;
}
//#endregion
export { AgentClient, AgentClientOptions, RequestOptions, convertResponseToUIMessageStream, createClient, createClientFromAgent };