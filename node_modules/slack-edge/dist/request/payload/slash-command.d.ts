export interface SlashCommand {
    /**
     * (Deprecated) This is a verification token, a deprecated feature that you shouldn't use any more. It was used to verify that requests were legitimately being sent by Slack to your app, but you should use the signed secrets functionality to do this instead.
     */
    token: string;
    /**
     * The command that was entered to trigger this request. This value can be useful if you want to use a single Request URL to service multiple slash commands, as it allows you to tell them apart.
     */
    command: string;
    /**
     * This is the part of the slash command after the command itself, and it can contain absolutely anything the user might decide to type. It is common to use this text parameter to provide extra context for the command. You can prompt users to adhere to a particular format by showing them in the Usage Hint field when creating a command.
     */
    text: string;
    /**
     * A temporary webhook URL that you can use to generate message responses.
     */
    response_url: string;
    /**
     * A short-lived ID that will allow your app to open a modal.
     */
    trigger_id: string;
    /**
     * The ID of the user who triggered the command.
     */
    user_id: string;
    /**
     * (Deprecated) The plain text name of the user who triggered the command. Do not rely on this field as it has been phased out. Use the user_id instead.
     */
    user_name: string;
    /**
     * These IDs provide context about where the user was in Slack when they triggered your app's command (e.g. the workspace, Enterprise Grid, or channel). You may need these IDs for your command response.
     * The various accompanying *_name values provide you with the plain text names for these IDs, but as always you should only rely on the IDs as the names might change arbitrarily.
     * We'll include enterprise_id and enterprise_name parameters on command invocations when the executing workspace is part of an Enterprise Grid.
     */
    team_id: string;
    /**
     * These IDs provide context about where the user was in Slack when they triggered your app's command (e.g. the workspace, Enterprise Grid, or channel). You may need these IDs for your command response.
     * The various accompanying *_name values provide you with the plain text names for these IDs, but as always you should only rely on the IDs as the names might change arbitrarily.
     * We'll include enterprise_id and enterprise_name parameters on command invocations when the executing workspace is part of an Enterprise Grid.
     */
    team_domain: string;
    /**
     * These IDs provide context about where the user was in Slack when they triggered your app's command (e.g. the workspace, Enterprise Grid, or channel). You may need these IDs for your command response.
     * The various accompanying *_name values provide you with the plain text names for these IDs, but as always you should only rely on the IDs as the names might change arbitrarily.
     * We'll include enterprise_id and enterprise_name parameters on command invocations when the executing workspace is part of an Enterprise Grid.
     */
    channel_id: string;
    /**
     * These IDs provide context about where the user was in Slack when they triggered your app's command (e.g. the workspace, Enterprise Grid, or channel). You may need these IDs for your command response.
     * The various accompanying *_name values provide you with the plain text names for these IDs, but as always you should only rely on the IDs as the names might change arbitrarily.
     * We'll include enterprise_id and enterprise_name parameters on command invocations when the executing workspace is part of an Enterprise Grid.
     */
    channel_name: string;
    /**
     * Your Slack app's unique identifier. Use this in conjunction with request signing to verify context for inbound requests.
     */
    api_app_id: string;
    /**
     * These IDs provide context about where the user was in Slack when they triggered your app's command (e.g. the workspace, Enterprise Grid, or channel). You may need these IDs for your command response.
     * The various accompanying *_name values provide you with the plain text names for these IDs, but as always you should only rely on the IDs as the names might change arbitrarily.
     * We'll include enterprise_id and enterprise_name parameters on command invocations when the executing workspace is part of an Enterprise Grid.
     */
    enterprise_id?: string;
    /**
     * These IDs provide context about where the user was in Slack when they triggered your app's command (e.g. the workspace, Enterprise Grid, or channel). You may need these IDs for your command response.
     * The various accompanying *_name values provide you with the plain text names for these IDs, but as always you should only rely on the IDs as the names might change arbitrarily.
     * We'll include enterprise_id and enterprise_name parameters on command invocations when the executing workspace is part of an Enterprise Grid.
     */
    enterprise_name?: string;
    /**
     * These IDs provide context about where the user was in Slack when they triggered your app's command (e.g. the workspace, Enterprise Grid, or channel). You may need these IDs for your command response.
     * The various accompanying *_name values provide you with the plain text names for these IDs, but as always you should only rely on the IDs as the names might change arbitrarily.
     * We'll include enterprise_id and enterprise_name parameters on command invocations when the executing workspace is part of an Enterprise Grid.
     */
    is_enterprise_install?: string;
}
//# sourceMappingURL=slash-command.d.ts.map