import { DataSubmissionView } from "./view-objects";
export interface ViewSubmission {
    type: "view_submission";
    team: {
        id: string;
        domain: string;
        enterprise_id?: string;
        enterprise_name?: string;
    } | null;
    user: {
        id: string;
        name: string;
        team_id?: string;
    };
    view: DataSubmissionView;
    api_app_id: string;
    token: string;
    trigger_id: string;
    is_enterprise_install?: boolean;
    enterprise?: {
        id: string;
        name: string;
    };
    /**
     * (Deprecated for workflow apps) An array of objects that contain response_url values, used to send message responses. Each object will also contain block_id and action_id values to identify the source of the interaction. Also included is a channel_id which identifies where the response_url will publish to. response_urls is available only when the view contained block elements configured to generate a response_url.
     */
    response_urls?: {
        block_id: string;
        action_id: string;
        channel_id: string;
        response_url: string;
    }[];
    /**
     * A workflow (just-in-time) token generated for this view submission.
     */
    bot_access_token?: string;
    /**
     * Metadata about the function execution that generated the view where this view submission took place.
     */
    function_data?: {
        execution_id: string;
        function: {
            callback_id: string;
        };
        inputs: {
            [key: string]: any;
        };
    };
    /**
     * An interactivity object generated as a result of the view submission.
     */
    interactivity?: {
        interactivity_pointer: string;
        interactor: {
            id: string;
            secret: string;
        };
    };
}
//# sourceMappingURL=view-submission.d.ts.map