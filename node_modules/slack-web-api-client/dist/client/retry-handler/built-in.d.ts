import type { RetryHandler, RetryHandlerArgs } from "./retry-handler";
export interface BasicRetryHandlerOptions {
    maxAttempts: number;
}
export declare const DefaultBasicRetryHandlerOptions: BasicRetryHandlerOptions;
export interface FixedIntervalRetryHandlerOptions {
    maxAttempts: number;
    intervalSeconds: number;
}
export declare const DefaultFixedIntervalRetryHandlerOptions: FixedIntervalRetryHandlerOptions;
export declare class RatelimitRetryHandler implements RetryHandler {
    #private;
    constructor(options?: BasicRetryHandlerOptions);
    shouldRetry({ state, response }: RetryHandlerArgs): Promise<boolean>;
}
export declare class ConnectionErrorRetryHandler implements RetryHandler {
    #private;
    constructor(options?: FixedIntervalRetryHandlerOptions);
    shouldRetry({ state, error }: RetryHandlerArgs): Promise<boolean>;
}
export declare class ServerErrorRetryHandler implements RetryHandler {
    #private;
    constructor(options?: FixedIntervalRetryHandlerOptions);
    shouldRetry({ state, response }: RetryHandlerArgs): Promise<boolean>;
}
//# sourceMappingURL=built-in.d.ts.map